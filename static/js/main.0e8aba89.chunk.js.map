{"version":3,"sources":["components/Header/index.jsx","components/Header/Header.jsx","components/Sidebar/index.jsx","components/Sidebar/Sidebar.jsx","components/CloseToaster/index.jsx","components/CloseToaster/CloseToaster.jsx","utils/formatter.js","components/BudgetInput/index.jsx","components/BudgetInput/BudgetInput.jsx","components/TableRow/index.jsx","components/TableRow/TableRow.jsx","api/consumers.js","containers/Main/index.jsx","containers/Main/Main.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Header","className","src","alt","type","placeholder","Sidebar","CloseToaster","closeToast","onClick","pad","number","width","filling","numberStr","length","padding","Array","join","currency","accounting","formatMoney","sortObjectArray","array","field","sort","a","b","BudgetInput","props","state","untouched","onChange","bind","event","this","setState","value","target","rawValue","getRawValue","isNaN","parseFloat","split","replace","FormControl","aria-label","arialLabel","aria-describedby","arialDescribedBy","autoFocus","React","Component","TableRow","handleClick","handleClickCheckbox","consumerId","consumerName","consumerBudget","consumerBudgetSpent","date","object","Date","day","getDate","month","getMonth","year","getFullYear","consumerDateFirstPurchase","consumers","id","name","budget","budget_spent","date_of_first_purchase","Main","consumersRaw","modalOpen","currentConsumer","modalErrorMessage","handleOpenModal","handleCloseModal","handleInputChange","handleSaveChanges","updateConsumerBudget","setModalErrorMessage","getConsumers","consumer","budget_untouched","budget_raw","isSameBudget","isValidBudget","isMoreThanSpent","setMoreThanSpentError","setInvalidBudgetError","toFixed","spent","untouchedConsumers","filter","i","handleSuccess","message","e","preventDefault","toast","success","Button","variant","map","key","Modal","show","onHide","centered","closeButton","undefined","Title","Body","InputGroup","Prepend","Text","Footer","App","autoClose","hideProgressBar","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e8aba89.chunk.js","sourcesContent":["import Header from \"./Header\";\nexport default Header;\n","import React from \"react\";\n\nconst Header = function() {\n  return (\n    <header className=\"header\">\n      <div className=\"header__left\">\n        <div className=\"header__logo-container\">\n          <img src=\"img/icon-1.png\" className=\"header__logo\" alt=\"Logo\" />\n        </div>\n\n        <div className=\"header__search-container\">\n          <img\n            src=\"img/icon-12.png\"\n            className=\"header__search-icon\"\n            alt=\"Magnifying glass\"\n          />\n          <input type=\"text\" className=\"header__input\" placeholder=\"Search\" />\n        </div>\n      </div>\n\n      <div className=\"header__right\">\n        <div className=\"header__bell-container\">\n          <img\n            src=\"img/icon-11.png\"\n            className=\"header__bell\"\n            alt=\"Notifications\"\n          />\n        </div>\n\n        <div className=\"header__avatar-container\">\n          <img\n            src=\"img/avatar.png\"\n            className=\"header__avatar\"\n            alt=\"Current user\"\n          />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import Sidebar from \"./Sidebar\";\nexport default Sidebar;\n","import React from \"react\";\n\nconst Sidebar = function() {\n  return (\n    <aside className=\"sidebar\">\n      <div className=\"sidebar__skeleton\"></div>\n\n      <div className=\"sidebar__content\">\n        <img src=\"img/icon-2.png\" className=\"sidebar__icon\" alt=\"Dashboard\" />\n        <img src=\"img/icon-3.png\" className=\"sidebar__icon\" alt=\"Dashboard\" />\n        <img src=\"img/icon-9.png\" className=\"sidebar__icon\" alt=\"Dashboard\" />\n        <img src=\"img/icon-4.png\" className=\"sidebar__icon\" alt=\"Dashboard\" />\n        <img src=\"img/icon-5.png\" className=\"sidebar__icon\" alt=\"Dashboard\" />\n        <img src=\"img/icon-6.png\" className=\"sidebar__icon\" alt=\"Dashboard\" />\n        <img src=\"img/icon-7.png\" className=\"sidebar__icon\" alt=\"Dashboard\" />\n      </div>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import CloseToaster from \"./CloseToaster\";\nexport default CloseToaster;\n","import React from \"react\";\n\nconst CloseToaster = ({ closeToast }) => (\n  <i className=\"Toastify__toast-close-icon\" onClick={closeToast}>\n    ×\n  </i>\n);\n\nexport default CloseToaster;\n","import accounting from \"accounting\";\n\nconst pad = (number, width = 2, filling = \"0\") => {\n  const numberStr = `${number}`;\n\n  if (numberStr.length >= width) {\n    return number;\n  }\n\n  const padding = new Array(width - numberStr.length + 1).join(filling);\n  return `${padding}${numberStr}`;\n};\n\nconst date = date => {\n  const object = new Date(date);\n\n  const day = object.getDate();\n  const month = object.getMonth() + 1;\n  const year = object.getFullYear();\n\n  return `${pad(day)}/${pad(month)}/${year}`;\n};\n\nconst currency = number => {\n  return accounting.formatMoney(number, \"\", 2, \".\", \",\");\n};\n\nconst sortObjectArray = (array, field = \"id\") => {\n  return array.sort((a, b) => a[field] - b[field]);\n};\n\nexport { pad, date, currency, sortObjectArray };\n","import BudgetInput from \"./BudgetInput\";\nexport default BudgetInput;\n","import React from \"react\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport { currency } from \"../../utils/formatter.js\";\n\nclass BudgetInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { untouched: true };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(event) {\n    this.setState({ untouched: false });\n\n    const { value } = event.target;\n    const rawValue = this.getRawValue(value);\n\n    if (!isNaN(rawValue)) {\n      this.props.onChange(value, parseFloat(rawValue, 10));\n    }\n  }\n\n  getRawValue(value) {\n    const strFloat = value\n      .split(\".\")\n      .join(\"\")\n      .replace(\",\", \".\");\n\n    return strFloat;\n  }\n\n  render() {\n    let value;\n\n    if (this.state.untouched === true) {\n      value = currency(this.props.value);\n    } else {\n      value = this.props.value;\n    }\n\n    return (\n      <FormControl\n        aria-label={this.props.arialLabel}\n        aria-describedby={this.props.arialDescribedBy}\n        type=\"text\"\n        value={value}\n        onChange={this.onChange.bind(this)}\n        autoFocus={true}\n        placeholder={this.props.placeholder}\n        className={this.props.className}\n      />\n    );\n  }\n}\n\nexport default BudgetInput;\n","import TableRow from \"./TableRow\";\nexport default TableRow;\n","import React from \"react\";\nimport { date, currency } from \"../../utils/formatter.js\";\n\nconst TableRow = props => (\n  <tr className=\"main__table-row\" onClick={props.handleClick}>\n    <td>\n      <input\n        type=\"checkbox\"\n        className=\"main__checkbox\"\n        onClick={props.handleClickCheckbox}\n      />\n    </td>\n\n    <td>{props.consumerId}</td>\n\n    <td>\n      <img\n        src={`img/logo-${props.consumerId}.png`}\n        className=\"main__row-logo\"\n        alt=\"Company Logo\"\n      />\n    </td>\n\n    <td>{props.consumerName}</td>\n    <td>€{currency(props.consumerBudget)}</td>\n    <td>€{currency(props.consumerBudgetSpent)}</td>\n    <td>{date(props.consumerDateFirstPurchase)}</td>\n\n    <td>\n      <img\n        src=\"img/icon-8.png\"\n        className=\"main__row-action\"\n        alt=\"Further actions\"\n      />\n    </td>\n  </tr>\n);\n\nexport default TableRow;\n","const consumers = [\n  {\n    id: 1,\n    name: \"Starbucks\",\n    budget: 94726.572,\n    budget_spent: 5783.7122,\n    date_of_first_purchase: \"2119-03-16\"\n  },\n  {\n    id: 2,\n    name: \"NBC\",\n    budget: 56104.0294,\n    budget_spent: 3943.5729,\n    date_of_first_purchase: \"2119-09-20\"\n  },\n  {\n    id: 3,\n    name: \"Dominos\",\n    budget: 17573.661,\n    budget_spent: 6852.0139,\n    date_of_first_purchase: \"2119-01-21\"\n  },\n  {\n    id: 4,\n    name: \"Shell\",\n    budget: 94624.3092,\n    budget_spent: 1049.9294,\n    date_of_first_purchase: \"2119-12-30\"\n  },\n  {\n    id: 5,\n    name: \"Pepsi\",\n    budget: 46105.361,\n    budget_spent: 2934.5724,\n    date_of_first_purchase: \"2119-07-14\"\n  },\n  {\n    id: 6,\n    name: \"Dove\",\n    budget: 89240.4619,\n    budget_spent: 5823.4991,\n    date_of_first_purchase: \"2119-10-07\"\n  },\n  {\n    id: 7,\n    name: \"Dell\",\n    budget: 30194.1613,\n    budget_spent: 9494.3966,\n    date_of_first_purchase: \"2119-01-07\"\n  },\n  {\n    id: 8,\n    name: \"Fanta\",\n    budget: 35124.1049,\n    budget_spent: 4935.1464,\n    date_of_first_purchase: \"2119-04-02\"\n  },\n  {\n    id: 9,\n    name: \"LG\",\n    budget: 64948.1485,\n    budget_spent: 4158.4957,\n    date_of_first_purchase: \"2119-03-19\"\n  },\n  {\n    id: 10,\n    name: \"Volkswagen\",\n    budget: 10353.303,\n    budget_spent: 9485.7635,\n    date_of_first_purchase: \"2119-06-15\"\n  },\n  {\n    id: 11,\n    name: \"Adidas\",\n    budget: 12833.8845,\n    budget_spent: 5772.5588,\n    date_of_first_purchase: \"2119-10-03\"\n  },\n  {\n    id: 12,\n    name: \"Cisco\",\n    budget: 42952.2296,\n    budget_spent: 6620.0029,\n    date_of_first_purchase: \"2119-12-12\"\n  },\n  {\n    id: 13,\n    name: \"Airbnb\",\n    budget: 91835.6295,\n    budget_spent: 9246.2153,\n    date_of_first_purchase: \"2119-05-08\"\n  }\n];\n\nexport default consumers;\n","import Main from \"./Main\";\nexport default Main;\n","import React from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport { toast } from \"react-toastify\";\n\nimport BudgetInput from \"../../components/BudgetInput\";\nimport TableRow from \"../../components/TableRow\";\nimport consumersRaw from \"../../api/consumers.js\";\nimport { currency, sortObjectArray } from \"../../utils/formatter.js\";\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      consumers: consumersRaw,\n      modalOpen: false,\n      currentConsumer: {},\n      modalErrorMessage: \"\"\n    };\n\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSaveChanges = this.handleSaveChanges.bind(this);\n    this.updateConsumerBudget = this.updateConsumerBudget.bind(this);\n    this.setModalErrorMessage = this.setModalErrorMessage.bind(this);\n    this.getConsumers = this.getConsumers.bind(this);\n  }\n\n  handleOpenModal(consumer) {\n    this.setState({\n      modalOpen: true,\n      currentConsumer: {\n        ...consumer,\n        budget_untouched: currency(consumer.budget)\n      }\n    });\n  }\n\n  handleCloseModal() {\n    this.setState({\n      modalOpen: false,\n      currentConsumer: {},\n      modalErrorMessage: \"\"\n    });\n  }\n\n  handleInputChange(value, rawValue) {\n    this.setState({\n      currentConsumer: {\n        ...this.state.currentConsumer,\n        budget: value,\n        budget_raw: rawValue\n      }\n    });\n  }\n\n  handleSaveChanges() {\n    const { currentConsumer: consumer } = this.state;\n\n    if (this.isSameBudget(consumer)) {\n      this.handleCloseModal();\n    } else {\n      if (this.isValidBudget(consumer)) {\n        if (this.isMoreThanSpent(consumer)) {\n          this.setModalErrorMessage(\"\");\n          this.updateConsumerBudget(consumer);\n        } else {\n          this.setMoreThanSpentError(consumer.budget_spent);\n        }\n      } else {\n        this.setInvalidBudgetError();\n      }\n    }\n  }\n\n  isSameBudget(consumer) {\n    return consumer.budget_raw === consumer.budget_untouched;\n  }\n\n  isValidBudget(consumer) {\n    return consumer && consumer.budget_raw && !isNaN(consumer.budget_raw);\n  }\n\n  isMoreThanSpent(consumer) {\n    return consumer.budget_raw >= parseFloat(consumer.budget_spent.toFixed(2));\n  }\n\n  setMoreThanSpentError(spent) {\n    this.setModalErrorMessage(\n      `Ops... the budget must be higher than the spent budget (€${currency(\n        spent\n      )})`\n    );\n  }\n\n  setInvalidBudgetError() {\n    this.setModalErrorMessage(\"Ops... the budget must be a valid number\");\n  }\n\n  updateConsumerBudget(consumer) {\n    const consumers = this.getConsumers();\n    const untouchedConsumers = consumers.filter(i => i.id !== consumer.id);\n\n    this.setState({\n      modalOpen: false,\n      consumer: {},\n      consumers: sortObjectArray([\n        ...untouchedConsumers,\n        { ...consumer, budget: consumer.budget_raw }\n      ])\n    });\n\n    this.handleSuccess();\n  }\n\n  setModalErrorMessage(message) {\n    this.setState({ modalErrorMessage: message });\n  }\n\n  handleClickCheckbox(e) {\n    e.preventDefault();\n    return false;\n  }\n\n  handleSuccess() {\n    toast.success(\"Budged updated successfully\");\n  }\n\n  getConsumers() {\n    return this.state.consumers;\n  }\n\n  render() {\n    const {\n      consumers,\n      modalOpen,\n      currentConsumer,\n      modalErrorMessage\n    } = this.state;\n\n    return (\n      <div className=\"main__container\">\n        <div className=\"main__delimiter\">\n          <div className=\"main__header\">\n            <h1 className=\"main__title\">\n              Consumers\n              <small className=\"main__counter\">({consumers.length})</small>\n            </h1>\n\n            <div className=\"main__actions\">\n              <Button variant=\"light\" className=\"main__button-light\">\n                Filter\n                <img\n                  src=\"img/icon-14.png\"\n                  className=\"main__filter-icon\"\n                  alt=\"Filter\"\n                />\n              </Button>\n\n              <Button variant=\"primary\" className=\"main__button-primary\">\n                Add Consumer\n                <img\n                  src=\"img/icon-13.png\"\n                  className=\"main__plus-icon\"\n                  alt=\"Add\"\n                />\n              </Button>\n            </div>\n          </div>\n\n          <table className=\"main__table\">\n            <thead>\n              <tr className=\"main__table-header-row\">\n                <th className=\"main__table-header-checkbox\">\n                  <input type=\"checkbox\" className=\"main__checkbox\" />\n                </th>\n\n                <th className=\"main__table-header-id\">ID</th>\n                <th className=\"main__table-header-logo\">COMPANY</th>\n                <th className=\"main__table-header-name\">NAME</th>\n                <th className=\"main__table-header-budget\">BUDGET</th>\n\n                <th className=\"main__table-header-budget-spent\">\n                  BUDGET SPENT\n                </th>\n\n                <th className=\"main__table-header-date\">\n                  DATE OF FIRST PURCHASE\n                </th>\n\n                <th>&nbsp;</th>\n              </tr>\n            </thead>\n\n            <tbody className=\"main__table-body\">\n              {sortObjectArray(consumers).map(consumer => (\n                <TableRow\n                  key={`consumer-${consumer.id}`}\n                  handleClick={() => this.handleOpenModal(consumer)}\n                  handleClickCheckbox={this.handleClickCheckbox}\n                  consumerId={consumer.id}\n                  consumerName={consumer.name}\n                  consumerBudget={consumer.budget}\n                  consumerBudgetSpent={consumer.budget_spent}\n                  consumerDateFirstPurchase={consumer.date_of_first_purchase}\n                />\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        <Modal show={modalOpen} onHide={this.handleCloseModal} centered>\n          <Modal.Header closeButton>\n            {currentConsumer.name !== undefined && (\n              <Modal.Title>\n                <img\n                  src={`img/logo-${currentConsumer.id}.png`}\n                  className=\"modal__logo\"\n                  alt=\"Company Logo\"\n                />\n\n                {currentConsumer.name}\n              </Modal.Title>\n            )}\n          </Modal.Header>\n\n          {currentConsumer.budget !== undefined && (\n            <Modal.Body>\n              {modalErrorMessage && (\n                <p className=\"modal__error-message\">{modalErrorMessage}</p>\n              )}\n\n              <div className=\"row modal__body\">\n                <div className=\"col-6\">\n                  <p className=\"modal__label\">Total budget:</p>\n                </div>\n\n                <div className=\"col-6\">\n                  <InputGroup className=\"mb-3\">\n                    <InputGroup.Prepend>\n                      <InputGroup.Text id=\"basic-addon1\">€</InputGroup.Text>\n                    </InputGroup.Prepend>\n\n                    <BudgetInput\n                      placeholder={currentConsumer.budget_untouched}\n                      value={currentConsumer.budget}\n                      onChange={this.handleInputChange}\n                      className=\"form-control\"\n                      arialLabel=\"Consumer budget\"\n                      arialDescribedBy=\"\"\n                    />\n                  </InputGroup>\n                </div>\n              </div>\n            </Modal.Body>\n          )}\n\n          <Modal.Footer>\n            <Button variant=\"light\" onClick={this.handleCloseModal}>\n              Close\n              <img\n                src=\"img/icon-16.png\"\n                className=\"modal__close-icon\"\n                alt=\"Close\"\n              />\n            </Button>\n\n            <Button variant=\"primary\" onClick={this.handleSaveChanges}>\n              Save Changes\n              <img\n                src=\"img/icon-15.png\"\n                className=\"modal__check-icon\"\n                alt=\"Check mark\"\n              />\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport Header from \"./components/Header\";\nimport Sidebar from \"./components/Sidebar\";\nimport CloseToaster from \"./components/CloseToaster\";\nimport Main from \"./containers/Main\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ToastContainer\n        autoClose={2000}\n        hideProgressBar={true}\n        closeButton={<CloseToaster />}\n      />\n      <Header />\n\n      <main className=\"main\">\n        <Sidebar />\n        <Main />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}